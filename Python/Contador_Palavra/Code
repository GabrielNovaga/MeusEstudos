"""
Esse modelo de analise serve para que possamos analisar alguns textos rapidos e assim dizer para qual nível ele para um leitor

"""


def count_setences(text): #para descobrir o número de setncias
    """Esse def serve para pegar a lista de palavras e returna o número total de sentenças"""
    count = 0
    terminal = '.;,!?' #determinar
    for char in text:
        if char in terminal:
            count = count + 1 #irá contar a quantidade de itens que tem .,;!?
    return count

def count_syllables(words):
    """Esse vai pegar as setenças e contar o número de silabas"""
    count = 0 #armazena a quantidade de silabas
    for word in words: #interar sobre cada palavra
        word_count = count_syllables_in_word(word)
        count = count + word_count
    return count

def count_syllables_in_word(word):
    """Esss contara o número de silabas por palavra"""
    count = 0 #armazenar a quantidade de letras
    endings = ',.;!?:' #configurando terminações de palavras
    last_char = word[-1] #pega a ultima caractere
    if last_char in endings: #depois de verificar se a ultima caractere é uma terminação
        processed_word = word[0:-1] #irá sumir com a ultima caractere se for terminal
    else:
        processed_word = word #se não mantem ela

    if len(processed_word) <=3: #Len irá obter o comprimento da palavra
        return 1 #se o codigo tiver menos que 3 caracteremes, devolvemos o 1
    
    if processed_word[-1] in 'eE':
        processed_word = processed_word[0:-1] #irá remover os eE mudos

    volwels = 'aeiouAEIOU' #Armazena vogais maisculas e minusculas
    prev_char_was_vowel = False

    for char in processed_word: #passar todas as caracteres pelas palavras
        if char in volwels: #ver se as caracteres são iguais
            if not prev_char_was_vowel:
                count = count + 1
        else:
            prev_char_was_vowel = False 
    if processed_word[-1] in 'yY': #se terminar assim, aumenta a contagem
        count = count + 1
    return count

def output_results(score):
    """Essa função definira o nivel de dificuldade"""
    if score >= 90:
        print('reading level of 5th grade')
    elif score >= 80:
        print('reading level of 6th grade')
    elif score >= 70:
        print('reading level of 7th grade')
    elif score >= 60:
        print('reading level of 8-9th grade')
    elif score >= 50:
        print('reading level of 10-12th grade')
    elif score >= 40:
        print('reading level of College Student')
    else:
        print('reading level of College Graduate')
        
def computer_readabiliy(text):
    """E essa função serve para mostrar o resultado que obtivemos de tudo feito anteriormente"""
    total_words = 0 #definimos como zero pois furamente será add
    total_setences = 0
    total_syllables = 0
    score = 0  
    words = text.split()
    total_words = len(words) #conta o número de itens dentro da lista
    total_setences = count_setences(text)
    total_syllables = count_syllables(words)

    score = (206.835 - 1.015 * (total_words / total_setences) - 84.6 * (total_syllables / total_words))
    #contagem de palavras, silabas e setencias
    output_results(score)
   

if __name__ == '__main__':
    import chltext
    print('Chapter 1 Text:')
    computer_readabiliy(chltext.text)

